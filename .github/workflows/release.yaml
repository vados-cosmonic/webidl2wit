name: release
run-name: release

on:
  push:
    tags:
      - "release-v[0-9]+.[0-9]+.[0-9]+*"
      - "release-v[0-9]+.[0-9]+.[0-9]+-*"
    branches:
      - "prep-release-v[0-9]+.[0-9]+.[0-9]+*"
      - "prep-release-v[0-9]+.[0-9]+.[0-9]+-*"
      - "feat(ops)=add-release-machinery" # TODO: REMOVE
  workflow_dispatch:
    inputs:
      project:
        description: Project to to prep for release (ex. `webidl2wit`)
        required: true
        default: "webidl2wit"
        type: string
        options:
          - webidl2wit
          - webidl2wit-cli

      version:
        description: Version to release (ex. `0.1.0`)
        required: false
        type: string

jobs:
  build-bin:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/release-v')  }}
    strategy:
      matrix:
        platforms:
          - triple: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: taiki-e/install-action@d125c0a83576d3c0c86ac610c708b38d3565af4e # v2.47.15
        with:
          fallback: none
          tool: cargo-zigbuild

      - name: build
        run: |
          cargo zigbuild --target=${{ matrix.platform.triple }}

      - uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ inputs.project == 'webidl2wit-cli' }}
        with:
          path: target/${{ matrix.platform.triple }}/wit-bindgen-cli
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    permissions:
      contents: write
    needs:
      - build-bin
    steps:
      # Checkout the repository
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: taiki-e/install-action@d125c0a83576d3c0c86ac610c708b38d3565af4e # v2.47.15
        with:
          fallback: none
          tool: git-cliff

      # Download all artifacts
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: artifacts

      - name: Collect metadata
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        id: meta
        result-encoding: string
        script: |
          if (context.ref.startsWith('refs/tags') {
            match = tag.replace(/^refs\/tags\//, '').match(/^(.*)-v(\d+\.\d+\.\d+)$/);
          } else if (context.ref.startsWith('refs/heads') {
            match = tag.replace(/^refs\/heads\//, '').match(/^release-(.+)-v(\d+\.\d+\.\d+)$/);
           } else {
             throw new Error(`Unexpected context ref [${context.ref}]`);
           }

           if (!match) { throw new Error(`Failed to parse tag/branch: [${context.ref}]`); }

           const [_, project, version] = match;
           return { project, version };

      # Generate a partial changelog
      - name: Generate current changelog
        run: |
          git cliff --unreleased --github-token $GITHUB_TOKEN --tag=${{ steps.meta.outputs.version }} --prepend=CHANGELOG.current

      # TODO: cargo release

      # Create release (pre-release if we're prepping)
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ startsWith(github.ref, 'refs/heads/release-v') }}
          draft: ${{ startsWith(github.ref, 'refs/heads/release-v') }}
          tag_name: ${{ github.ref_name || inputs.version }}
          generate_release_notes: false
          body_path: CHANGELOG.current
          files: |
            ./artifacts/*/*
